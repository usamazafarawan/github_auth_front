.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }

  ::ng-deep .mat-sidenav .mat-drawer-inner-container{
    overflow: hidden !important;
  }
  
.active-tab{
    color: white !important;
    background-color: #7A499D !important;

}
.active-tab svg path{
    stroke: white;
}
::ng-deep .mdc-text-field--filled:not(.mdc-text-field--disabled) {
  background-color: #FFFFFF !important;
}
::ng-deep .mdc-text-field--filled:not(.mdc-text-field--disabled) {
  border: 1px solid #E5E7EB !important;
  border-radius: 10px;
  height: 50px;
}

::ng-deep .mdc-line-ripple::before{
 border-bottom: none !important;
}

.sidenav {
  width: 240px;
  transition: width 0.3s ease;
  overflow: hidden;
}

.sidenav.collapsed {
  width: 80px; // or however narrow you want it
}

.expanded-content {
  margin-left: 240px !important; // same as expanded sidenav width
}

.collapsed-content {
  margin-left: 80px !important; // same as collapsed sidenav width
}

// Ensure the sidebar stays beneath pop-up overlay
:host ::ng-deep .mat-sidenav {
  z-index: 0 !important;
}
:host ::ng-deep .mat-sidenav-container {
  z-index: 0 !important;
}



